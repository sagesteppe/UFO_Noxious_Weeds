# st_write(pts,
#          '/media/sagesteppe/ExternalHD/UFO_cartography/AIM_plots_outcomes/plots_outcomes.shp',
#          quiet = T)
plot_status <- pts %>%
select(colnames(plot_status)) %>%
st_drop_geometry()
plot_summary <- plot_status %>%
group_by(stratum, Plot.Status) %>%
summarise(n = n())  %>%
ungroup(Plot.Status) %>%
mutate(total = sum(n)) %>%
pivot_longer(n:total, values_to = 'Number') %>%
mutate(Plot.Status = if_else(name == 'total', 'total', Plot.Status)) %>%
select(-name) %>%
group_by(stratum, Plot.Status) %>%
sample_n(1)
rm(status_check)
# format table for printing
plot_summary <- plot_summary %>%
pivot_wider(values_from = Number, names_from = Plot.Status) %>%
mutate(stratum = str_to_upper(stratum)) %>%
mutate(across(.cols = everything(), ~ replace_na(.x, 0))) %>%
rename_with(., ~ str_to_sentence(.))
# DERIVE THE VALUES FOR BOTH TOTAL AREA AND AREAS IN ACRES
r <- read.csv(file.path(p2d, 'UFO_strata_areas.csv')) %>%
mutate(ProportionalArea = Cells/sum(Cells)) %>%
select(Stratum, Code, ProportionalArea, Acres)
deSS <- data.frame( # desired sample size per stratum over live of sample design
'Stratum' = c("AS", "GR", "MC", "MMS", "OT" , "PJ", "PP", "RI", "SD" , "SS" ),
'DesiredSS' = c(5, 5, 15, 25, 5, 25, 5, 15, 75, 80),
'PropTarget' = c(0.01, 0.02, 0.05, 0.1, 0.01, 0.12, 0.01, 0.05, 0.3, 0.33)
)
OriginalWeights <- left_join(plot_summary, r, by = c('Stratum' = 'Code')) %>%
left_join(., deSS, by = 'Stratum') %>%
select(StratumName = Stratum.y, Stratum, Total,  NotSampled = Not_sampled, Rejected, Sampled,
DesiredSS, PropArea = ProportionalArea, PropTarget, Acres) %>%
mutate(ApproxStWgt = Acres / (DesiredSS/5))
OriginalWeights %>%
mutate(PropArea = round(PropArea, 3)) %>%
mutate(across(.cols = c(Acres, ApproxStWgt),  round)) %>%
arrange(-Acres) %>%
ungroup() %>%
select(Stratum, Acres, PropArea, PropTarget, DesiredSS, ApproxStWgt) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum', 'Area (acres)', 'Prop. Area',
'Prop. Site', 'No. Plots', 'Plot Wt.'),
caption = "Original Sample Design for the Entire Sample Frame",
align = c("c", rep('r', times = (ncol(.) - 1))))  %>%
kable_styling(full_width = F)
rm(r, plot_summary)
Full_newWghts <- plotWeigher(OriginalWeights, pts)
Full_newWghts %>%
mutate(across(TotalAcres:WgtAcres, ~ round(.x, 3))) %>%
mutate(across(PlotsSampled:PlotsRejected, ~ replace_na(.x, 0))) %>%
arrange(-TotalAcres) %>%
select(Stratum, WghtPerPlot, WgtAcres, PlotsSampled, PlotsRejected) %>%
knitr::kable(., digits = 3, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum',  'Plot Wt.', 'Plot Wt. Ac.', 'Sampled', 'Rejected'),
caption = "Realized Weighted Sample Design for the Entire Sample Frame",
align = c("c", rep('r', times = (ncol(.) - 1)))) %>%
kableExtra::add_header_above(., c(" " = 3,  "No. Plots" = 2)) %>%
kableExtra::kable_styling(latex_options = "hold_position")
OriginalWeights_results <- mutate(OriginalWeights, 'Area' = 'SampleFrame') %>%
select(-any_of(c('StratumName')))
NewWeights_results <- mutate(Full_newWghts, 'Area' = 'SampleFrame') %>%
select(-any_of(c('StratumName')))
rm(OriginalWeights, Full_newWghts)
spatial_products <- '../../UFO_cartography'
design_rast <- '../../UFO_AIM_Design_Stratification/processed'
lookup_table <- read.csv(file.path(design_rast, 'UFO_strata_areas.csv')) %>%
select(RasterValue, Code)
strat_raster <- terra::rast(file.path(design_rast, 'UFO_Strata_reclass_30m.tif'))
uFO <- st_read(file.path(spatial_products,
'BLM_CO_Grazing_Allotments/gra_allot_poly.shp'), quiet = T)
acecs <- st_read(file.path(spatial_products, 'BLM_CO_ACEC/acec_desig_poly.shp'),
quiet = T) %>%
st_intersection(uFO, .) %>%
select(NAME = ACEC_NAME) %>%
mutate(TYPE = 'ACEC',  .before = geometry)  %>%
filter(NAME != 'Sinbad Valley ACEC')
wsa <- st_read(file.path(spatial_products, 'BLM_CO_WSA/nlcs_wsa_poly.shp'),
quiet = T) %>%
st_intersection(uFO, .) %>%
select(NAME = NLCS_NAME) %>%
mutate(TYPE = 'WSA', .before = geometry)
wsAcec <- bind_rows(acecs, wsa) %>%
mutate(ID = 1:n(), .before = 1)
wsAcec_OriginalWeights <- originalWeights(sample_area = wsAcec,
strat_raster = strat_raster, pt_data = pts)
wsAcec_pts <- wsAcec_OriginalWeights[[1]] # we return a list with the points needed for recalculating the weights
wsAcec_OriginalWeights <- wsAcec_OriginalWeights[[2]]
wsAcec_OriginalWeights %>%
mutate(PropArea = round(PropArea, 3)) %>%
mutate(across(.cols = c(Acres, ApproxStWgt),  round)) %>%
arrange(-Acres) %>%
ungroup() %>%
select(Stratum, Acres, PropArea, PropTarget, DesiredSS, ApproxStWgt) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum', 'Area (acres)', 'Prop. Area',
'Prop. Site', 'No. Plots', 'Plot Wt.'),
caption = "Original Sample Design for Areas of Critical Environmental Concern and Wilderness Study Areas",
align = c("c", rep('r', times = (ncol(.) - 1))))  %>%
kableExtra::kable_styling(latex_options = "hold_position")
rm(raster_cells, wsaSpat, wsAcec, wsAcec_area_summary, wsAcec_pt_draw,
base_wsAcec_pts, raster_cells, wsAcec_areas, design_rast)
acecs <- acecs %>% group_by(NAME) %>%
summarize(geometry = st_union(geometry))
acec_pts <- st_intersection(st_transform(wsAcec_pts, st_crs(acecs)) , acecs) %>%
group_by(NAME)
acec_bp_drawn <- acec_pts %>%
filter(str_detect(Panel, 'Sample', negate = T)) %>%
group_by(NAME) %>%
count(name = 'total_plots') %>%
st_drop_geometry()
acec_pts_sampled <- acec_pts %>%
filter(Plot.Status == 'sampled') %>%
group_by(NAME) %>%
count(name = 'sampled') %>%
st_drop_geometry() %>%
left_join(., acec_bp_drawn, by = 'NAME') %>%
right_join(., acecs , by = 'NAME') %>%
st_drop_geometry() %>%
select(NAME, total_plots, sampled) %>%
distinct() %>%
mutate(across(where(is.numeric), ~ replace_na(.x, 0))) %>%
filter(total_plots > 0)
# wsa <- wsa %>% group_by(NAME) %>%
#  summarize(geometry = st_union(geometry)) # wsa are off.
acecs %>%
mutate(Area = round(as.numeric(units::set_units(st_area(.), "acre")), 0)) %>%
st_drop_geometry() %>%
arrange(-Area) %>%
left_join(., acec_pts_sampled)  %>%
mutate(across(where(is.numeric), ~ replace_na(.x, 0))) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Name', 'Area (ac.)', 'Drawn', 'Sampled'),
caption = "Number of Plots Drawn per ACEC",
align = c("c", rep('r', times = (ncol(.) - 1)))) %>%
kableExtra::add_header_above(., c(" ", "", "No. Plots" = 2)) %>%
kableExtra::kable_styling(latex_options = "hold_position")
wsAcec_newWghts <- plotWeigher(wsAcec_OriginalWeights, wsAcec_pts)
wsAcec_newWghts %>%
mutate(across(TotalAcres:WgtAcres, ~ round(.x, 3))) %>%
mutate(across(PlotsSampled:PlotsRejected, ~ replace_na(.x, 0))) %>%
arrange(-TotalAcres) %>%
select(Stratum, WghtPerPlot, WgtAcres, PlotsSampled, PlotsRejected) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum',  'Plot Wt.', 'Plot Wt. Ac.', 'Sampled', 'Rejected'),
caption = "Realized Weighted Sample Design for the ACEC-WSA",
align = c("c", rep('r', times = (ncol(.) - 1)))) %>%
kableExtra::add_header_above(., c(" " = 3,  "No. Plots" = 2)) %>%
kableExtra::kable_styling(latex_options = "hold_position")
OriginalWeights_results <- bind_rows(OriginalWeights_results, wsAcec_OriginalWeights %>%
mutate('Area' = 'ACEC-WSA'))
NewWeights_results <- bind_rows(NewWeights_results, wsAcec_newWghts %>%
mutate('Area' = 'ACEC-WSA'))
points <- pts %>%
mutate('AoInference' = if_else(Plot.ID %in% wsAcec_pts$Plot.ID, 'ACEC-WSA', 'unassigned'))
#NoStrata(wsAcec_newWghts)
rm(wsAcec_OriginalWeights, wsAcec_pts, wsAcec_newWghts)
ggplot(wsAcec) +
geom_sf()
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.pos = 'H')
library(tidyverse)
library(sf)
library(terra)
library(spsurvey)
library(kableExtra)
library(ggalluvial)
source('functions.R')
p2d <- '../data/raw'
plot_status <- read.csv(file.path(p2d, list.files(path = p2d, pattern = "summary.csv")))  %>%
mutate(across(.cols = everything(), ~ str_to_lower(.))) %>%
# humans are humans and typos are an expression of humanity. also  add a
# factor levels which we arrange by and slice the top from .
mutate(
Plot.Status = str_trim(Plot.Status, side = "both"),
#  Plot.Status = str_replace(Plot.Status, 'rejected', 'not_sampled'),
Plot.Status = str_replace(Plot.Status, " ", "_"),
psF = factor(Plot.Status, levels = c('sampled', 'not_sampled', 'rejected'))
) %>%
# some numbers are missing leading zereos
separate(Plot.ID, into = c('stratum', 'id'), sep = '-') %>%
mutate(id = str_pad(id, 3, pad = "0")) %>%
# group up - and take that 'sampled' from the top - if present
unite('Plot.ID', stratum:id, sep = "-", remove = F) %>%
group_by(Plot.ID) %>%
arrange(psF)
# some plots were not sampled in one year, but subsequently sampled
status_check <- plot_status %>% # we want to ensure all of these plots are returned as sampled.
mutate(grp_n = n()) %>%
filter(grp_n >= 2, Plot.Status == 'sampled')
plot_status <- plot_status %>%
slice_head(n = 1) %>%
ungroup()
# inner_join(plot_status, status_check, by = 'Plot.ID') # take a look for yourself, all good.
# it turns out some oversamples from the original design were not populated over to the yearly tracking
# sheets. We can note there status as not_sampled here.
plot_status <- plot_status %>%
mutate(across(.cols = Plot.ID:stratum, ~ str_to_upper(.x)))
pts <- st_read(
'/media/sagesteppe/ExternalHD/aimDB/data/raw/AIM_Sample_Design/AIM_Design_Stratification.shp',
quiet = T) %>%
left_join(., plot_status, by = c('PLOTID' = 'Plot.ID')) %>%
select(-Panel) %>%
separate(PLOTID, into = c('stratum', 'id'), sep = '-', remove = F) %>%
mutate(across(Plot.Status:psF, ~ replace_na(.x, 'not_sampled'))) %>%
# some over samples were not completed
select(Plot.ID = PLOTID, stratum, id, Panel = PANEL, Plot.Status, psF, xcoord, ycoord, geometry)
# st_write(pts,
#          '/media/sagesteppe/ExternalHD/UFO_cartography/AIM_plots_outcomes/plots_outcomes.shp',
#          quiet = T)
plot_status <- pts %>%
select(colnames(plot_status)) %>%
st_drop_geometry()
plot_summary <- plot_status %>%
group_by(stratum, Plot.Status) %>%
summarise(n = n())  %>%
ungroup(Plot.Status) %>%
mutate(total = sum(n)) %>%
pivot_longer(n:total, values_to = 'Number') %>%
mutate(Plot.Status = if_else(name == 'total', 'total', Plot.Status)) %>%
select(-name) %>%
group_by(stratum, Plot.Status) %>%
sample_n(1)
rm(status_check)
# format table for printing
plot_summary <- plot_summary %>%
pivot_wider(values_from = Number, names_from = Plot.Status) %>%
mutate(stratum = str_to_upper(stratum)) %>%
mutate(across(.cols = everything(), ~ replace_na(.x, 0))) %>%
rename_with(., ~ str_to_sentence(.))
# DERIVE THE VALUES FOR BOTH TOTAL AREA AND AREAS IN ACRES
r <- read.csv(file.path(p2d, 'UFO_strata_areas.csv')) %>%
mutate(ProportionalArea = Cells/sum(Cells)) %>%
select(Stratum, Code, ProportionalArea, Acres)
deSS <- data.frame( # desired sample size per stratum over live of sample design
'Stratum' = c("AS", "GR", "MC", "MMS", "OT" , "PJ", "PP", "RI", "SD" , "SS" ),
'DesiredSS' = c(5, 5, 15, 25, 5, 25, 5, 15, 75, 80),
'PropTarget' = c(0.01, 0.02, 0.05, 0.1, 0.01, 0.12, 0.01, 0.05, 0.3, 0.33)
)
OriginalWeights <- left_join(plot_summary, r, by = c('Stratum' = 'Code')) %>%
left_join(., deSS, by = 'Stratum') %>%
select(StratumName = Stratum.y, Stratum, Total,  NotSampled = Not_sampled, Rejected, Sampled,
DesiredSS, PropArea = ProportionalArea, PropTarget, Acres) %>%
mutate(ApproxStWgt = Acres / (DesiredSS/5))
OriginalWeights %>%
mutate(PropArea = round(PropArea, 3)) %>%
mutate(across(.cols = c(Acres, ApproxStWgt),  round)) %>%
arrange(-Acres) %>%
ungroup() %>%
select(Stratum, Acres, PropArea, PropTarget, DesiredSS, ApproxStWgt) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum', 'Area (acres)', 'Prop. Area',
'Prop. Site', 'No. Plots', 'Plot Wt.'),
caption = "Original Sample Design for the Entire Sample Frame",
align = c("c", rep('r', times = (ncol(.) - 1))))  %>%
kable_styling(full_width = F)
rm(r, plot_summary)
Full_newWghts <- plotWeigher(OriginalWeights, pts)
Full_newWghts %>%
mutate(across(TotalAcres:WgtAcres, ~ round(.x, 3))) %>%
mutate(across(PlotsSampled:PlotsRejected, ~ replace_na(.x, 0))) %>%
arrange(-TotalAcres) %>%
select(Stratum, WghtPerPlot, WgtAcres, PlotsSampled, PlotsRejected) %>%
knitr::kable(., digits = 3, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum',  'Plot Wt.', 'Plot Wt. Ac.', 'Sampled', 'Rejected'),
caption = "Realized Weighted Sample Design for the Entire Sample Frame",
align = c("c", rep('r', times = (ncol(.) - 1)))) %>%
kableExtra::add_header_above(., c(" " = 3,  "No. Plots" = 2)) %>%
kableExtra::kable_styling(latex_options = "hold_position")
OriginalWeights_results <- mutate(OriginalWeights, 'Area' = 'SampleFrame') %>%
select(-any_of(c('StratumName')))
NewWeights_results <- mutate(Full_newWghts, 'Area' = 'SampleFrame') %>%
select(-any_of(c('StratumName')))
rm(OriginalWeights, Full_newWghts)
spatial_products <- '../../UFO_cartography'
design_rast <- '../../UFO_AIM_Design_Stratification/processed'
lookup_table <- read.csv(file.path(design_rast, 'UFO_strata_areas.csv')) %>%
select(RasterValue, Code)
strat_raster <- terra::rast(file.path(design_rast, 'UFO_Strata_reclass_30m.tif'))
uFO <- st_read(file.path(spatial_products,
'BLM_CO_Grazing_Allotments/gra_allot_poly.shp'), quiet = T)
acecs <- st_read(file.path(spatial_products, 'BLM_CO_ACEC/acec_desig_poly.shp'),
quiet = T) %>%
st_intersection(uFO, .) %>%
select(NAME = ACEC_NAME) %>%
mutate(TYPE = 'ACEC',  .before = geometry)  %>%
filter(NAME != 'Sinbad Valley ACEC')
wsa <- st_read(file.path(spatial_products, 'BLM_CO_WSA/nlcs_wsa_poly.shp'),
quiet = T) %>%
st_intersection(uFO, .) %>%
select(NAME = NLCS_NAME) %>%
mutate(TYPE = 'WSA', .before = geometry)
wsAcec <- bind_rows(acecs, wsa) %>%
mutate(ID = 1:n(), .before = 1)
wsAcec_OriginalWeights <- originalWeights(sample_area = wsAcec,
strat_raster = strat_raster, pt_data = pts)
wsAcec_pts <- wsAcec_OriginalWeights[[1]] # we return a list with the points needed for recalculating the weights
wsAcec_OriginalWeights <- wsAcec_OriginalWeights[[2]]
wsAcec_OriginalWeights %>%
mutate(PropArea = round(PropArea, 3)) %>%
mutate(across(.cols = c(Acres, ApproxStWgt),  round)) %>%
arrange(-Acres) %>%
ungroup() %>%
select(Stratum, Acres, PropArea, PropTarget, DesiredSS, ApproxStWgt) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum', 'Area (acres)', 'Prop. Area',
'Prop. Site', 'No. Plots', 'Plot Wt.'),
caption = "Original Sample Design for Areas of Critical Environmental Concern and Wilderness Study Areas",
align = c("c", rep('r', times = (ncol(.) - 1))))  %>%
kableExtra::kable_styling(latex_options = "hold_position")
rm(raster_cells, wsaSpat, wsAcec_area_summary, wsAcec_pt_draw,
base_wsAcec_pts, raster_cells, wsAcec_areas, design_rast)
acecs <- acecs %>% group_by(NAME) %>%
summarize(geometry = st_union(geometry))
acec_pts <- st_intersection(st_transform(wsAcec_pts, st_crs(acecs)) , acecs) %>%
group_by(NAME)
acec_bp_drawn <- acec_pts %>%
filter(str_detect(Panel, 'Sample', negate = T)) %>%
group_by(NAME) %>%
count(name = 'total_plots') %>%
st_drop_geometry()
acec_pts_sampled <- acec_pts %>%
filter(Plot.Status == 'sampled') %>%
group_by(NAME) %>%
count(name = 'sampled') %>%
st_drop_geometry() %>%
left_join(., acec_bp_drawn, by = 'NAME') %>%
right_join(., acecs , by = 'NAME') %>%
st_drop_geometry() %>%
select(NAME, total_plots, sampled) %>%
distinct() %>%
mutate(across(where(is.numeric), ~ replace_na(.x, 0))) %>%
filter(total_plots > 0)
# wsa <- wsa %>% group_by(NAME) %>%
#  summarize(geometry = st_union(geometry)) # wsa are off.
acecs %>%
mutate(Area = round(as.numeric(units::set_units(st_area(.), "acre")), 0)) %>%
st_drop_geometry() %>%
arrange(-Area) %>%
left_join(., acec_pts_sampled)  %>%
mutate(across(where(is.numeric), ~ replace_na(.x, 0))) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Name', 'Area (ac.)', 'Drawn', 'Sampled'),
caption = "Number of Plots Drawn per ACEC",
align = c("c", rep('r', times = (ncol(.) - 1)))) %>%
kableExtra::add_header_above(., c(" ", "", "No. Plots" = 2)) %>%
kableExtra::kable_styling(latex_options = "hold_position")
wsAcec_newWghts <- plotWeigher(wsAcec_OriginalWeights, wsAcec_pts)
wsAcec_newWghts %>%
mutate(across(TotalAcres:WgtAcres, ~ round(.x, 3))) %>%
mutate(across(PlotsSampled:PlotsRejected, ~ replace_na(.x, 0))) %>%
arrange(-TotalAcres) %>%
select(Stratum, WghtPerPlot, WgtAcres, PlotsSampled, PlotsRejected) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum',  'Plot Wt.', 'Plot Wt. Ac.', 'Sampled', 'Rejected'),
caption = "Realized Weighted Sample Design for the ACEC-WSA",
align = c("c", rep('r', times = (ncol(.) - 1)))) %>%
kableExtra::add_header_above(., c(" " = 3,  "No. Plots" = 2)) %>%
kableExtra::kable_styling(latex_options = "hold_position")
OriginalWeights_results <- bind_rows(OriginalWeights_results, wsAcec_OriginalWeights %>%
mutate('Area' = 'ACEC-WSA'))
NewWeights_results <- bind_rows(NewWeights_results, wsAcec_newWghts %>%
mutate('Area' = 'ACEC-WSA'))
points <- pts %>%
mutate('AoInference' = if_else(Plot.ID %in% wsAcec_pts$Plot.ID, 'ACEC-WSA', 'unassigned'))
#NoStrata(wsAcec_newWghts)
rm(wsAcec_OriginalWeights, wsAcec_pts, wsAcec_newWghts)
monuments <- st_read(file.path(spatial_products, 'BLM_CO_NM_NCA/nlcs_nm_nca_poly.shp'),
quiet = T) %>%
st_intersection(uFO, .) %>%
group_by(NLCS_NAME) %>%
st_collection_extract("POLYGON")  %>%  # there are these funny points
summarize(geometry = st_union(geometry)) %>%
rename(NAME = NLCS_NAME)
DEnm <- monuments %>% filter(str_detect(NAME, 'Dominguez')) %>%
mutate(ID = 1:n(), .before = 1, TYPE = 'NM')
total_area <- round(as.numeric(measurements::conv_unit(st_area(DEnm), "m2", "acre"))) # mismatch because the NA
dearea <- TArea(DEnm)
OW_deNM <- originalWeights(DEnm, strat_raster, pts)
OW_deNM_pts <- OW_deNM[[1]]
DEnm <- monuments %>% filter(str_detect(NAME, 'Dominguez')) %>%
mutate(ID = 1:n(), .before = 1, TYPE = 'NM')
total_area <- round(as.numeric(measurements::conv_unit(st_area(DEnm), "m2", "acre"))) # mismatch because the NA
dearea <- TArea(DEnm)
OW_deNM <- originalWeights(DEnm, strat_raster, pts)
OW_deNM_pts <- OW_deNM[[1]]
OW_deNM <- OW_deNM[[2]]
OW_deNM %>%
mutate(PropArea = round(PropArea, 3)) %>%
mutate(across(.cols = c(Acres, ApproxStWgt),  round)) %>%
arrange(-Acres) %>%
ungroup() %>%
select(Stratum, Acres, PropArea, PropTarget, DesiredSS, ApproxStWgt) %>%
knitr::kable(., digits = 2, format.args = list(big.mark = ","), booktabs = T,
col.names = c('Stratum', 'Area (acres)', 'Prop. Area',
'Prop. Site', 'No. Plots', 'Plot Wt.'),
caption = "Original Sample Design for Dominguez-Escalante NCA",
align = c("c", rep('r', times = (ncol(.) - 1)))) %>%
kableExtra::kable_styling(latex_options = "hold_position")
ggplot(wsAcec) +
geom_sf()
DEnm_only <- st_difference(wsAcec, DEnm)
ggplot(DEnm_only) +
geom_sf()
DEnm_only <- st_difference(DEnm, wsAcec)
ggplot(DEnm_only) +
geom_sf()
ggplot() +
geom_sf(data = DEnm_only, fill = 'yellow') +
geom_sf(data = wsAcec, fill = 'red')
ggplot() +
geom_sf(data = DEnm_only, fill = 'yellow') +
geom_sf(data = wsAcec, fill = 'red', alpha = 0.5)
ggplot() +
geom_sf(data = DEnm_only, fill = 'yellow') +
geom_sf(data = wsAcec, fill = 'red', alpha = 0.5)
ggplot() +
geom_sf(data = DEnm_only, fill = 'yellow')# +
ggplot() +
geom_sf(data = DEnm, fill = 'red', alpha = 0.5)
ggplot() +
geom_sf(data = DEnm, fill = 'red', alpha = 0.5) +
geom_sf(data = DEnm_only, fill = 'yellow')
ggplot() +
geom_sf(data = DEnm, fill = 'red', alpha = 0.5) +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.5)
ggplot() +
geom_sf(data = DEnm, fill = 'red') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.5)
ggplot() +
geom_sf(data = DEnm, fill = 'red') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.1)
ggplot() +
geom_sf(data = DEnm, fill = 'black') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.1)
ggplot() +
geom_sf(data = DEnm, fill = 'black') #+
ggplot() +
geom_sf(data = DEnm, fill = 'black') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.1)
DEnm_only <- st_difference(DEnm, st_union(st_combine(wsAcec)))
DEnm <- st_make_valid(DEnm)
DEnm_only <- st_difference(DEnm, st_union(st_combine(wsAcec)))
wsAcec <- st_make_valid(wsAcec)
DEnm_only <- st_difference(DEnm, st_union(st_combine(wsAcec)))
DEnm_only <- st_difference(DEnm, st_union(wsAcec))
ggplot() +
geom_sf(data = DEnm, fill = 'black') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.1)
ggplot() +
geom_sf(data = DEnm, fill = 'black') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.3)
ggplot() +
geom_sf(data = DEnm, fill = 'black') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.4)
total_area <- round(as.numeric(measurements::conv_unit(st_area(DEnm_only), "m2", "acre"))) # mismatch because the NA
de_only <- TArea(DEnm_only)
View(OW_deNM)
sum(OW_deNM$Acres)
dearea
sum(OW_deNM$Acres)
de_only
de_only
ggplot() +
geom_sf(data = DEnm, fill = 'black') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.4)
ggplot() +
geom_sf(data = DEnm, fill = 'red') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.7)
ggplot() +
#geom_sf(data = DEnm, fill = 'red') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.7)
ggplot() +
geom_sf(data = DEnm, fill = 'red') +
geom_sf(data = DEnm_only, fill = 'yellow', alpha = 0.7)
rm(OW_deNM, OW_newWghtsm, de_only, dearea)
dearea
dearea <- TArea(DEnm)
GGnm <- monuments %>% filter(str_detect(NAME, 'Gunnison')) %>%
mutate(ID = 1:n(), .before = 1, TYPE = 'NM')
total_area <- round(as.numeric(measurements::conv_unit(st_area(GGnm), "m2", "acre"))) # mismatch because the NA
ggarea <- TArea(GGnm)
DEnm_only <- st_difference(DEnm, st_union(wsAcec))
gg_only <- TArea(GGnm_only)
GGnm_only <- st_difference(GGnm, st_union(wsAcec))
total_area <- round(as.numeric(measurements::conv_unit(st_area(GGnm_only), "m2", "acre")))
gg_only <- TArea(GGnm_only)
ggplot() +
geom_sf(data = gg_only)
ggplot() +
geom_sf(data = GGnm_only)
ggplot() +
geom_sf(data = GGnm) +
geom_sf(data = GGnm_only)
ggplot() +
geom_sf(data = GGnm, fill = 'red') +
geom_sf(data = GGnm_only)
ggplot() +
geom_sf(data = GGnm, fill = 'red') +
geom_sf(data = GGnm_only, fill = 'yellow')
ggplot() +
geom_sf(data = GGnm, fill = 'red') +
geom_sf(data = GGnm_only, fill = 'yellow', alpha = 0.5)
ggplot() +
geom_sf(data = GGnm, fill = 'green') +
geom_sf(data = GGnm_only, fill = 'red', alpha = 0.5)
