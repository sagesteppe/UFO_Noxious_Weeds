library(sf)
library(tidyverse)
invasive_species <- read.csv( file.path('..', 'data', 'processed', 'Introducted_species_CO.csv') )
View(invasive_species)
fp <- file.path('..', '..',  'UFO_cartography/BLM_CO_ADMU')
ufo_bbox <- st_read(
file.path(fp, list.files(fp, pattern = '.shp$')), quiet = T) %>%
st_transform(4326) %>%
st_bbox()
bien_recs <- BIEN::BIEN_occurrence_box(min.lat  = ufo_bbox[2],
max.lat  = ufo_bbox[4],
min.long = ufo_bbox[1],
max.long = ufo_bbox[3])
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
toString(names(most_common_inv))
toString(as.numeric(most_common_inv))
toString(names(most_common_inv))
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
library(sf)
library(spsurvey)
library(tidyverse)
library(waffle)
library(hrbrthemes)
#install.packages('FSA')
hrbrthemes::import_roboto_condensed()
select <- dplyr::select
source('functions.R')
p <- file.path('..', 'data', 'raw')
f <- list.files(p)
plot_char <- read.csv( file.path(p, f[grep('Characterization', f)]) ) %>%
dplyr::select(PrimaryKey, Easting, Northing) %>%
drop_na()
invasive_species <- read.csv(
file.path('..', 'data', 'processed', 'Introduced_species_CO.csv') ) %>%
select(National_USDASymbol:Invasive)
spp_alpha <- read.csv( file.path(p, f[grep('Richness.csv$', f)])) %>%
dplyr::select(PrimaryKey, SpeciesList, abundance, distribution) %>%
right_join(., plot_char, by = 'PrimaryKey') %>%
st_as_sf(coords = c('Easting', 'Northing'), crs = 4269) %>%
st_transform(26913)
pts <- st_read(
'/media/sagesteppe/ExternalHD/aimDB/data/raw/AIM_Sample_Design/AIM_Design_Stratification.shp',
quiet = T) %>%
st_transform(26913) %>%
st_buffer(55) %>%
dplyr::select(PLOTID, STRATUM)
spp_alpha <- spp_alpha %>%
st_transform(26913)
esd_class <- read.csv( file.path(p, f[grep('Tracking', f)]) ) %>%
filter(STATUS == 'SAMPLED') %>%
mutate(ECO.SITE = if_else(ECO.SITE.MATCHED == F, 'UNKNOWN', ECO.SITE)) %>%
dplyr::select(PlotID = PLOT.ID, ECO.SITE)
spp_alpha <- st_intersection(pts, spp_alpha) %>%
left_join(., esd_class, by = c('PLOTID' = 'PlotID')) %>%
mutate(ECO.SITE = if_else(PLOTID == 'GR-035', 'R036XY114CO', ECO.SITE),
PLOTID = if_else(PLOTID == 'GR-035', 'GR-025', PLOTID))
rm(plot_char, pts, esd_class)
lpi <- read.csv( file.path(p, f[grep('LPIRAW', f)]) ) %>%
dplyr::select(PrimaryKey, TopCanopy:SoilSurface) %>%
filter(PrimaryKey %in% spp_alpha$PrimaryKey) %>%
mutate(TopCanopy = na_if(TopCanopy, 'None'),
TopCanopy = na_if(TopCanopy, 'N')) %>%
mutate(across(.cols = everything(), ~ na_if(.x, ""))) %>%
unite(col = 'All_species',  TopCanopy:SoilSurface,  sep = " ", na.rm = T, remove = F)
Invasive <- lapply(lpi$All_species, inv_present, invasive_species$National_USDASymbol)
Invasive <- unlist(Invasive)
lpi <- bind_cols(lpi, Invasive = Invasive)
# percent cover of all plants
lpi_sum <- lpi %>%
group_by(PrimaryKey) %>%
dplyr::summarize(Vascular_Intercepts = 150 - sum(is.na(TopCanopy)),
Invasive_Intercepts = sum(Invasive))
# join up
lpi_sum <- left_join(lpi_sum, dplyr::select(spp_alpha, PLOTID, PrimaryKey) %>%
distinct(), by = 'PrimaryKey') %>%
dplyr::select(-PrimaryKey) %>%
mutate(Proportion_Invasive = Invasive_Intercepts/Vascular_Intercepts) %>%
st_as_sf()
# Cover of individual invasive species by plots
lpi2 <- lpi %>%
dplyr::select(PrimaryKey:Lower4, -All_species) %>%
pivot_longer(!PrimaryKey, values_to = 'SYMBOL')  %>%
filter(!SYMBOL %in% c('L', 'WL', 'HL')) %>%
drop_na(SYMBOL) %>%
group_by(PrimaryKey, SYMBOL) %>%
count(SYMBOL) %>%
filter(SYMBOL %in% invasive_species$National_USDASymbol) %>%
ungroup()
# something wrong, i have duplicates on
invasive_sum <- left_join(lpi2, dplyr::select(spp_alpha, PLOTID, PrimaryKey) %>%
distinct(), by = 'PrimaryKey') %>%
dplyr::select(-PrimaryKey, -geometry) %>%
left_join(., dplyr::select( invasive_species, National_USDASymbol, Invasive),
by = c('SYMBOL' ='National_USDASymbol'))
rm(Invasive, inv_present, lpi2)
inv <- spp_alpha %>%
left_join(., invasive_species, by = c('SpeciesList' = 'National_USDASymbol')) %>%
group_by(PLOTID) %>%
add_count(name = 'No_Spp') %>%
group_by(PLOTID) %>%
mutate(INTRO_CNT = if_else(National_NativeStatus %in% c('Both', 'Introduced'), 1, 0 ),
No_Introduced = sum(INTRO_CNT)) %>%
mutate(INVAS_CNT = if_else(Invasive == T, 1, 0 ),
No_Invasive = sum(INVAS_CNT, na.rm =T)) %>%
dplyr::select(-INVAS_CNT, -INTRO_CNT) %>%
ungroup(PLOTID)
inv_richness <- inv %>%
drop_na(National_SciName_noAuthority) %>%
mutate(Prop_Int = No_Introduced/No_Spp,
Prop_Inv = No_Invasive/No_Spp)
inv_plots <- dplyr::select(inv, PLOTID, ECO.SITE, No_Spp, No_Introduced, No_Invasive)  %>%
group_by(PLOTID) %>%
slice_max(No_Invasive, n = 1, with_ties = F)
rm(spp_alpha, inv)
inv_carto <- inv_richness %>%
mutate(across(.cols = Prop_Int:Prop_Inv, ~ scales::rescale(., to = c(0,1)))) %>%
select(PLOTID, Prop_Int, Prop_Inv) %>%
st_drop_geometry()
inv_carto <- left_join(lpi_sum, inv_carto, by = "PLOTID") %>%
distinct(PLOTID, .keep_all = T) %>%
rowwise() %>%
mutate(Prop_Inv2 = sum(Proportion_Invasive + Prop_Inv + Prop_Int, na.rm = T)/3) %>%
select(PLOTID, Index_Prop = Prop_Inv2, Proportion_Invasive, Prop_Inv, Prop_Int)
plot_vars <- inv_carto %>%
st_drop_geometry() %>%
pivot_longer(cols = c('Prop_Inv', 'Prop_Int', 'Proportion_Invasive'),
names_to = 'Variable', values_to = 'Proportion') %>%
mutate(Proportion = replace_na(Proportion, 0))
wghts <- read.csv( file.path(p, f[grep('Weights', f)])) %>%
select(WghtPerPlot, STRATUM = Stratum, AoInference = Area)
esd_class <- read.csv( file.path(p, f[grep('Tracking', f)]) ) %>%
filter(STATUS == 'SAMPLED') %>%
mutate(ECO.SITE = if_else(ECO.SITE.MATCHED == F, 'UNKNOWN', ECO.SITE)) %>%
select(PLOTID = PLOT.ID, ECO.SITE)
# Perform with WHETHER PLANT was ON PLOT (species richness)
inv_plots <- inv_plots %>%
mutate(Meeting = if_else(No_Invasive == 0, T, F))
inv_plots <- read.csv( file.path(p, f[grep('Interence', f)])) %>%
select(PLOTID = Plot.ID, AoInference) %>%
right_join(., inv_plots) %>%
mutate(STRATUM = str_remove(str_extract(PLOTID, '^.*-'), '-')) %>%
left_join(., wghts, by = c('STRATUM','AoInference')) %>%
left_join(., esd_class, by = 'PLOTID') %>%
select(-ECO.SITE.y, ECO.SITE = ECO.SITE.x) %>%
st_as_sf() %>%
drop_na()
noxious_presence_analysis <- cat_analysis(
dframe = inv_plots, siteID = 'PLOTID', vars = 'Meeting',
subpops = 'AoInference',  weight = 'WghtPerPlot', vartype = 'Local', conf = 80)
# Perform with WHETHER PLANT was ON LPI line
meeting <- lpi_sum %>%
mutate(Meeting = if_else(Proportion_Invasive  == 0, T, F)) %>%
select(PLOTID, Meeting, Proportion_Invasive)
meeting <- read.csv( file.path(p, f[grep('Interence', f)])) %>%
select(PLOTID = Plot.ID, AoInference) %>%
right_join(., meeting, by = "PLOTID") %>%
mutate(STRATUM = str_remove(str_extract(PLOTID, '^.*-'), '-')) %>%
left_join(., wghts, by = c('STRATUM','AoInference')) %>%
left_join(., esd_class, by = 'PLOTID') %>%
st_as_sf() %>%
drop_na()
noxious_cover_analysis <- cat_analysis(
dframe = meeting, siteID = 'PLOTID', vars = 'Meeting',
subpops = 'AoInference',  weight = 'WghtPerPlot', vartype = 'Local', conf = 80)
rm(wghts, esd_class, warn_df, inv_carto, f, p)
m1 <- meeting %>%
group_by(ECO.SITE) %>%
filter(ECO.SITE != 'UNKNOWN', n() >= 3)
kt <- kruskal.test(m1$Proportion_Invasive, as.factor(m1$ECO.SITE))
dt_res <- FSA::dunnTest(Proportion_Invasive ~ as.factor(ECO.SITE),
data = m1,
method = "holm"
)[['res']] %>%
filter(P.adj < 0.8)
Mdn <- group_by(m1, ECO.SITE) %>%
dplyr::summarize(count = n()) %>%
ungroup() %>% st_drop_geometry()
rm(dt_res)
rm(kt, m1, Mdn, meeting)
r <- left_join(select(lpi_sum, PLOTID, Vascular_Intercepts) %>% distinct(),
invasive_sum, by= 'PLOTID')  %>%
rowwise() %>%
mutate(Prop_Cover = n/Vascular_Intercepts) %>%
filter(Prop_Cover <= 1.0) # need to see why SD-338
r_locations <- r %>%
group_by(SYMBOL) %>%
add_count(SYMBOL) %>%
filter(Invasive == T)
ne_weeds <- c('ALDE','CACH42','CADR','CIAR4', 'COAR4',
'CYOF', 'GYEL', 'LEDE', 'PHPR3', 'POAR8', 'POAV', 'TARA')
ne_labels <- filter(invasive_species, National_USDASymbol %in% ne_weeds) %>%
pull(National_SciName_noAuthority)
r_locations_ne <- r_locations %>% filter(SYMBOL %in% ne_weeds)
r_locations <- r_locations %>% filter(!SYMBOL %in% ne_weeds)
rm(lpi, r, invasive_species, ne_weeds, ne_labels)
nca <- noxious_cover_analysis
inv_richness <- st_drop_geometry(inv_richness)
inv_r_t <- inv_richness[inv_richness$Invasive==T,]
most_common_inv <-  sort(
table(inv_r_t$National_SciName_noAuthority))[
length(unique(inv_r_t$SpeciesList)):(length(unique(inv_r_t$SpeciesList))-5)]
nox_Pres <- filter(noxious_presence_analysis, Category %in% c(T, 'Total'))
nox_Cov <- filter(noxious_cover_analysis, Category %in% c(T, 'Total'))
rm(r_locations_ne, r_locations, noxious_cover_analysis)
most_common_inv
most_common_inv <-  sort(
table(inv_r_t$National_SciName_noAuthority))[
length(unique(inv_r_t$SpeciesList)):(length(unique(inv_r_t$SpeciesList))-5)]
most_common_inv <-  sort(
table(inv_r_t$National_SciName_noAuthority))[
length(unique(inv_r_t$SpeciesList)):(length(unique(inv_r_t$SpeciesList))-4)]
most_common_inv
mci <- data.frame(
species = names(most_common_inv),
count = as.numeric(most_common_inv),
common = c('cheatgrass', 'saltlover', 'lambs quarter', 'pirckly lettuce', 'yellow salsify')
)
View(nca)
View(mci)
mci <- data.frame(
species = names(most_common_inv),
count = as.numeric(most_common_inv),
common = c('cheatgrass', 'saltlover', 'lambs quarter', 'pirckly lettuce', 'yellow salsify')
) %>%
paste0(species, ' (', common, ')', ' n = ', count))
mci <- data.frame(
species = names(most_common_inv),
count = as.numeric(most_common_inv),
common = c('cheatgrass', 'saltlover', 'lambs quarter', 'pirckly lettuce', 'yellow salsify')
) %>%
paste0(species, ' (', common, ')', ' n = ', count)
mci <- data.frame(
species = names(most_common_inv),
count = as.numeric(most_common_inv),
common = c('cheatgrass', 'saltlover', 'lambs quarter', 'pirckly lettuce', 'yellow salsify')
) %>%
mutate(report = paste0(species, ' (', common, ')', ' n = ', count))
View(mci)
mci <- data.frame(
species = names(most_common_inv),
count = as.numeric(most_common_inv),
common = c('cheatgrass', 'saltlover', 'lambs quarter', 'pirckly lettuce', 'yellow salsify')
) %>%
mutate(report = paste0(species, ' (', common, ')', ' n = ', count)) %>%
pull(report)
toString(mci)
toString(mci)
mci <- data.frame(
species = names(most_common_inv),
count = as.numeric(most_common_inv),
common = c('cheatgrass', 'saltlover', 'lambs quarter', 'pirckly lettuce', 'yellow salsify')
) %>%
mutate(report = paste0('*',species, '*' ,' (', common, ')', ' n = ', count)) %>%
pull(report)
mci
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
library(sf)
library(spsurvey)
library(tidyverse)
library(waffle)
library(hrbrthemes)
#install.packages('FSA')
hrbrthemes::import_roboto_condensed()
select <- dplyr::select
source('functions.R')
p <- file.path('..', 'data', 'raw')
f <- list.files(p)
plot_char <- read.csv( file.path(p, f[grep('Characterization', f)]) ) %>%
dplyr::select(PrimaryKey, Easting, Northing) %>%
drop_na()
invasive_species <- read.csv(
file.path('..', 'data', 'processed', 'Introduced_species_CO.csv') ) %>%
select(National_USDASymbol:Invasive)
spp_alpha <- read.csv( file.path(p, f[grep('Richness.csv$', f)])) %>%
dplyr::select(PrimaryKey, SpeciesList, abundance, distribution) %>%
right_join(., plot_char, by = 'PrimaryKey') %>%
st_as_sf(coords = c('Easting', 'Northing'), crs = 4269) %>%
st_transform(26913)
pts <- st_read(
'/media/sagesteppe/ExternalHD/aimDB/data/raw/AIM_Sample_Design/AIM_Design_Stratification.shp',
quiet = T) %>%
st_transform(26913) %>%
st_buffer(55) %>%
dplyr::select(PLOTID, STRATUM)
spp_alpha <- spp_alpha %>%
st_transform(26913)
esd_class <- read.csv( file.path(p, f[grep('Tracking', f)]) ) %>%
filter(STATUS == 'SAMPLED') %>%
mutate(ECO.SITE = if_else(ECO.SITE.MATCHED == F, 'UNKNOWN', ECO.SITE)) %>%
dplyr::select(PlotID = PLOT.ID, ECO.SITE)
spp_alpha <- st_intersection(pts, spp_alpha) %>%
left_join(., esd_class, by = c('PLOTID' = 'PlotID')) %>%
mutate(ECO.SITE = if_else(PLOTID == 'GR-035', 'R036XY114CO', ECO.SITE),
PLOTID = if_else(PLOTID == 'GR-035', 'GR-025', PLOTID))
rm(plot_char, pts, esd_class)
lpi <- read.csv( file.path(p, f[grep('LPIRAW', f)]) ) %>%
dplyr::select(PrimaryKey, TopCanopy:SoilSurface) %>%
filter(PrimaryKey %in% spp_alpha$PrimaryKey) %>%
mutate(TopCanopy = na_if(TopCanopy, 'None'),
TopCanopy = na_if(TopCanopy, 'N')) %>%
mutate(across(.cols = everything(), ~ na_if(.x, ""))) %>%
unite(col = 'All_species',  TopCanopy:SoilSurface,  sep = " ", na.rm = T, remove = F)
Invasive <- lapply(lpi$All_species, inv_present, invasive_species$National_USDASymbol)
Invasive <- unlist(Invasive)
lpi <- bind_cols(lpi, Invasive = Invasive)
# percent cover of all plants
lpi_sum <- lpi %>%
group_by(PrimaryKey) %>%
dplyr::summarize(Vascular_Intercepts = 150 - sum(is.na(TopCanopy)),
Invasive_Intercepts = sum(Invasive))
# join up
lpi_sum <- left_join(lpi_sum, dplyr::select(spp_alpha, PLOTID, PrimaryKey) %>%
distinct(), by = 'PrimaryKey') %>%
dplyr::select(-PrimaryKey) %>%
mutate(Proportion_Invasive = Invasive_Intercepts/Vascular_Intercepts) %>%
st_as_sf()
# Cover of individual invasive species by plots
lpi2 <- lpi %>%
dplyr::select(PrimaryKey:Lower4, -All_species) %>%
pivot_longer(!PrimaryKey, values_to = 'SYMBOL')  %>%
filter(!SYMBOL %in% c('L', 'WL', 'HL')) %>%
drop_na(SYMBOL) %>%
group_by(PrimaryKey, SYMBOL) %>%
count(SYMBOL) %>%
filter(SYMBOL %in% invasive_species$National_USDASymbol) %>%
ungroup()
# something wrong, i have duplicates on
invasive_sum <- left_join(lpi2, dplyr::select(spp_alpha, PLOTID, PrimaryKey) %>%
distinct(), by = 'PrimaryKey') %>%
dplyr::select(-PrimaryKey, -geometry) %>%
left_join(., dplyr::select( invasive_species, National_USDASymbol, Invasive),
by = c('SYMBOL' ='National_USDASymbol'))
rm(Invasive, inv_present, lpi2)
inv <- spp_alpha %>%
left_join(., invasive_species, by = c('SpeciesList' = 'National_USDASymbol')) %>%
group_by(PLOTID) %>%
add_count(name = 'No_Spp') %>%
group_by(PLOTID) %>%
mutate(INTRO_CNT = if_else(National_NativeStatus %in% c('Both', 'Introduced'), 1, 0 ),
No_Introduced = sum(INTRO_CNT)) %>%
mutate(INVAS_CNT = if_else(Invasive == T, 1, 0 ),
No_Invasive = sum(INVAS_CNT, na.rm =T)) %>%
dplyr::select(-INVAS_CNT, -INTRO_CNT) %>%
ungroup(PLOTID)
inv_richness <- inv %>%
drop_na(National_SciName_noAuthority) %>%
mutate(Prop_Int = No_Introduced/No_Spp,
Prop_Inv = No_Invasive/No_Spp)
inv_plots <- dplyr::select(inv, PLOTID, ECO.SITE, No_Spp, No_Introduced, No_Invasive)  %>%
group_by(PLOTID) %>%
slice_max(No_Invasive, n = 1, with_ties = F)
rm(spp_alpha, inv)
inv_carto <- inv_richness %>%
mutate(across(.cols = Prop_Int:Prop_Inv, ~ scales::rescale(., to = c(0,1)))) %>%
select(PLOTID, Prop_Int, Prop_Inv) %>%
st_drop_geometry()
inv_carto <- left_join(lpi_sum, inv_carto, by = "PLOTID") %>%
distinct(PLOTID, .keep_all = T) %>%
rowwise() %>%
mutate(Prop_Inv2 = sum(Proportion_Invasive + Prop_Inv + Prop_Int, na.rm = T)/3) %>%
select(PLOTID, Index_Prop = Prop_Inv2, Proportion_Invasive, Prop_Inv, Prop_Int)
plot_vars <- inv_carto %>%
st_drop_geometry() %>%
pivot_longer(cols = c('Prop_Inv', 'Prop_Int', 'Proportion_Invasive'),
names_to = 'Variable', values_to = 'Proportion') %>%
mutate(Proportion = replace_na(Proportion, 0))
wghts <- read.csv( file.path(p, f[grep('Weights', f)])) %>%
select(WghtPerPlot, STRATUM = Stratum, AoInference = Area)
esd_class <- read.csv( file.path(p, f[grep('Tracking', f)]) ) %>%
filter(STATUS == 'SAMPLED') %>%
mutate(ECO.SITE = if_else(ECO.SITE.MATCHED == F, 'UNKNOWN', ECO.SITE)) %>%
select(PLOTID = PLOT.ID, ECO.SITE)
# Perform with WHETHER PLANT was ON PLOT (species richness)
inv_plots <- inv_plots %>%
mutate(Meeting = if_else(No_Invasive == 0, T, F))
inv_plots <- read.csv( file.path(p, f[grep('Interence', f)])) %>%
select(PLOTID = Plot.ID, AoInference) %>%
right_join(., inv_plots) %>%
mutate(STRATUM = str_remove(str_extract(PLOTID, '^.*-'), '-')) %>%
left_join(., wghts, by = c('STRATUM','AoInference')) %>%
left_join(., esd_class, by = 'PLOTID') %>%
select(-ECO.SITE.y, ECO.SITE = ECO.SITE.x) %>%
st_as_sf() %>%
drop_na()
noxious_presence_analysis <- cat_analysis(
dframe = inv_plots, siteID = 'PLOTID', vars = 'Meeting',
subpops = 'AoInference',  weight = 'WghtPerPlot', vartype = 'Local', conf = 80)
# Perform with WHETHER PLANT was ON LPI line
meeting <- lpi_sum %>%
mutate(Meeting = if_else(Proportion_Invasive  == 0, T, F)) %>%
select(PLOTID, Meeting, Proportion_Invasive)
meeting <- read.csv( file.path(p, f[grep('Interence', f)])) %>%
select(PLOTID = Plot.ID, AoInference) %>%
right_join(., meeting, by = "PLOTID") %>%
mutate(STRATUM = str_remove(str_extract(PLOTID, '^.*-'), '-')) %>%
left_join(., wghts, by = c('STRATUM','AoInference')) %>%
left_join(., esd_class, by = 'PLOTID') %>%
st_as_sf() %>%
drop_na()
noxious_cover_analysis <- cat_analysis(
dframe = meeting, siteID = 'PLOTID', vars = 'Meeting',
subpops = 'AoInference',  weight = 'WghtPerPlot', vartype = 'Local', conf = 80)
rm(wghts, esd_class, warn_df, inv_carto, f, p)
m1 <- meeting %>%
group_by(ECO.SITE) %>%
filter(ECO.SITE != 'UNKNOWN', n() >= 3)
kt <- kruskal.test(m1$Proportion_Invasive, as.factor(m1$ECO.SITE))
dt_res <- FSA::dunnTest(Proportion_Invasive ~ as.factor(ECO.SITE),
data = m1,
method = "holm"
)[['res']] %>%
filter(P.adj < 0.8)
Mdn <- group_by(m1, ECO.SITE) %>%
dplyr::summarize(count = n()) %>%
ungroup() %>% st_drop_geometry()
rm(dt_res)
rm(kt, m1, Mdn, meeting)
r <- left_join(select(lpi_sum, PLOTID, Vascular_Intercepts) %>% distinct(),
invasive_sum, by= 'PLOTID')  %>%
rowwise() %>%
mutate(Prop_Cover = n/Vascular_Intercepts) %>%
filter(Prop_Cover <= 1.0) # need to see why SD-338
r_locations <- r %>%
group_by(SYMBOL) %>%
add_count(SYMBOL) %>%
filter(Invasive == T)
ne_weeds <- c('ALDE','CACH42','CADR','CIAR4', 'COAR4',
'CYOF', 'GYEL', 'LEDE', 'PHPR3', 'POAR8', 'POAV', 'TARA')
ne_labels <- filter(invasive_species, National_USDASymbol %in% ne_weeds) %>%
pull(National_SciName_noAuthority)
r_locations_ne <- r_locations %>% filter(SYMBOL %in% ne_weeds)
r_locations <- r_locations %>% filter(!SYMBOL %in% ne_weeds)
rm(lpi, r, invasive_species, ne_weeds, ne_labels)
nca <- noxious_cover_analysis
inv_richness <- st_drop_geometry(inv_richness)
inv_r_t <- inv_richness[inv_richness$Invasive==T,]
most_common_inv <-  sort(
table(inv_r_t$National_SciName_noAuthority))[
length(unique(inv_r_t$SpeciesList)):(length(unique(inv_r_t$SpeciesList))-4)]
mci <- data.frame(
species = names(most_common_inv),
count = as.numeric(most_common_inv),
common = c('cheatgrass', 'saltlover', 'lambs quarter', 'pirckly lettuce', 'yellow salsify')
) %>%
mutate(report = paste0('*',species, '*' ,' (', common, ')', ' n = ', count)) %>%
pull(report)
nox_Pres <- filter(noxious_presence_analysis, Category %in% c(T, 'Total'))
nox_Cov <- filter(noxious_cover_analysis, Category %in% c(T, 'Total'))
rm(r_locations_ne, r_locations, noxious_cover_analysis)
rm(most_common_inv, inv_r_t, inv_richness, lpi_sum, invasive_sum)
rm(nox_Cov, nox_Pres, noxious_presence_analysis, plot_vars, mci)
rm(nox_Cov, nox_Pres, noxious_presence_analysis, plot_vars, mci, nca, inv_plots, select)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
paste0(round(nc5[nc5$Subpopulation == 'DE-NM', 'Estimate.P'], 1), '%')
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
library(sf)
library(spsurvey)
library(tidyverse)
library(waffle)
library(hrbrthemes)
#install.packages('FSA')
hrbrthemes::import_roboto_condensed()
select <- dplyr::select
source('functions.R')
p <- file.path('..', 'data', 'raw')
f <- list.files(p)
plot_char <- read.csv( file.path(p, f[grep('Characterization', f)]) ) %>%
dplyr::select(PrimaryKey, Easting, Northing) %>%
drop_na()
invasive_species <- read.csv(
file.path('..', 'data', 'processed', 'Introduced_species_CO.csv') ) %>%
select(National_USDASymbol:Invasive)
spp_alpha <- read.csv( file.path(p, f[grep('Richness.csv$', f)])) %>%
dplyr::select(PrimaryKey, SpeciesList, abundance, distribution) %>%
right_join(., plot_char, by = 'PrimaryKey') %>%
st_as_sf(coords = c('Easting', 'Northing'), crs = 4269) %>%
st_transform(26913)
pts <- st_read(
'/media/sagesteppe/ExternalHD/aimDB/data/raw/AIM_Sample_Design/AIM_Design_Stratification.shp',
quiet = T) %>%
st_transform(26913) %>%
st_buffer(55) %>%
dplyr::select(PLOTID, STRATUM)
